import streamlit as st
from google import genai

class ChitChatSystem:
    def __init__(self):
        """
        Initialize the Chit-Chat system with Google Gemini client using secrets from Streamlit.
        """
        # Configure API key
        self.client = genai.Client(api_key=st.secrets["GEMINI_API_KEY"])

    def generate_chitchat_response(self, user_input, chat_history=[]):
        """
        Generate a chit-chat response using Google Gemini API with contextual understanding.

        Args:
            user_input (str): The user's query or input.
            chat_history (list of dict): Previous conversation history 
                (format: {"role": "user" or "model", "content": "text"}).

        Returns:
            str: The response generated by the model.
        """
        # Instruction prompt to guide Gemini in considering previous context
        system_prompt = {
            "role": "system",
            "content": (
                "You are a friendly AI assistant. Maintain a natural conversation flow. "
                "Consider previous context if relevant, but keep responses concise and helpful."
            )
        }

        # Ensure chat history is formatted correctly
        messages = [system_prompt] + chat_history.copy()  # Start with system prompt

        # Append the new user message
        messages.append({"role": "user", "content": user_input})

        # Call the Gemini API
        response = self.client.models.generate_content(
            model="gemini-2.0-flash-lite",
            contents=messages  # Provide full conversation context
        )

        # Extract the response text
        model_response = response.text.strip() if hasattr(response, "text") else response.candidates[0].content.strip()

        # Append the model's response to chat history
        messages.append({"role": "model", "content": model_response})

        return model_response, messages  # Return updated chat history
